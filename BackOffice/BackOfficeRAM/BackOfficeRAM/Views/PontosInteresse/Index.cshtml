@model IEnumerable<BackOfficeRAM.Models.PontoInteresse>
@{
    ViewBag.Title = "Index";
}
<br />
<div style="background-color:#fff;padding:10px;border-radius:5px;border:1px solid #ddd">
    <div id="map" class="" style="height:300px;width:100%"></div>
    <div class="row" style="margin-top:5px;">
        <p class="col-sm-3" style="color:#00F">Edifício de Arquitectura Doméstica</p>
        <p class="col-sm-2" style="color:#F00">Edifícios Públicos</p>
    </div>
</div>
<br />
<div class="row">
    <div class="col">
        <p>
            <a class="btn btn-primary" href="@Url.Action("Create","PontosInteresse")">Criar novo Ponto de Interesse</a>
        </p>
    </div>
    <div class="col" style="display:flex;flex-direction:row-reverse;">
        @using (Html.BeginForm())
        {
            <div class="row">
                <div class="col">
                    @Html.TextBox("SearchString", "", new { @class = "form-control", style = "padding:9px", placeholder = "Pesquisar..." })
                </div>
                <div style="margin-right: 15px;">
                    <input type="submit" value="🔍" class="btn btn-primary" />
                    <a class="btn btn-primary" href="@Url.Action("Index")">Limpar</a>
                </div>
            </div>
        }
    </div>
</div>
<br />
<table class="table table-hover" style="background-color:#fff">
    <tr>
        <th style="width:25%">
            @Html.DisplayNameFor(model => model.Nome)
        </th>
        <th style="width:50%">
            Localização
        </th>
        <th style="width:25%"></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr style="cursor:pointer" onclick="javascript:window.location='@Url.Action("Details","PontosInteresse", new{id = item.Id})'">
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td style="max-width:100px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;">
                @Html.DisplayFor(modelItem => item.Localizacao)
            </td>
            <td>
                @Html.ActionLink("Detalhes", "Details", new { id = item.Id }) 

                @if (User.IsInRole("administrador") || User.IsInRole("utilizador"))
                {
                    @:|
                    @Html.ActionLink("Editar", "Edit", new { id = item.Id })
                    @:|
                    @Html.ActionLink("Eliminar", "Delete", new { id = item.Id })
                }

            </td>
        </tr>
    }
</table>


@section scripts
    {
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBaNOF8NDOvIgeHEO5Glt6yz9AellnNS2E&callback=initMap" async defer></script>

    <script>
        var map;
        function initMap() {
            var myCenter = new google.maps.LatLng(parseFloat("39.603803"), parseFloat("-8.406601"));
            var mapProp = {
                center: myCenter,
                zoom: 15,
                scrollwheel: true,
                draggable: true,
                mapTypeId: google.maps.MapTypeId.SATELLITE,
                zoomControl: false,
                mapTypeControl: false,
                scaleControl: false,
                streetViewControl: true,
                rotateControl: false,
                fullscreenControl: true
            };
            map = new google.maps.Map(document.getElementById('map'),
                mapProp
            );
             @foreach (var item in Model)
             {
                 if (item.TipoEdificio== "Edifício Publico")
                 {
                    <text>
                      var icone = "http://maps.google.com/mapfiles/ms/icons/red-dot.png";
                      var cor ="#FF0000";
                    </text>
                 }
                 else{
                    <text>
                        var icone = "http://maps.google.com/mapfiles/ms/icons/blue-dot.png";
                        var cor = "#0000FF";
                    </text>
                    }

                    <text>

                    var marker = new google.maps.Marker({
                        position: new google.maps.LatLng(parseFloat("@item.CoordenadaIcon.Latitude"), parseFloat("@item.CoordenadaIcon.Longitude")),
                        title: "@Html.Raw(item.TipoEdificio) - @Html.Raw(item.Nome)",
                        icon: {
                            url: icone
                        }
                    });
                    marker.addListener('click', function () {
                        window.location.href = "PontosInteresse/Details/@item.Id"
                    });
                     var coords = [];
                    @foreach (var coordenada in item.CoordenadasPoligono)
                    {
                        @:coords.push({ lat: parseFloat("@coordenada.Latitude.Replace(",",".")"), lng: parseFloat("@coordenada.Longitude.Replace(",",".")") });
                    }
                    var poligono = new google.maps.Polygon({
                        paths: coords,
                        strokeColor: cor,
                        strokeOpacity: 0.8,
                        strokeWeight: 2,
                        fillColor: cor,
                        fillOpacity: 0.35
                    });
                    poligono.addListener('click', function () {
                        window.location.href = "PontosInteresse/Details/@item.Id"
                    });
                    poligono.setMap(map);
                    marker.setMap(map);
                </text>
             }
        }
    </script>
}