@model BackOfficeRAM.Models.PontoInteresse

@{
    ViewBag.Title = "Details";
}



<br />
<h2>@Html.DisplayFor(model => model.Nome)</h2>

<div>
    <h4></h4>
    <hr />
    <div class="container">
        <div class="row">

            <div id="map" class="col-md-3 img-thumbnail" style="height:300px;width:100%;margin-bottom:10px"></div>

            <br />
            <div class="col-md" style="background-color:#fff;padding:20px;margin:0 0 10px 10px">
                <div class="row">
                    <div class="col-sm">
                        <div class="h3 col-sm">
                            Autor(es):
                        </div>
                        <div class="col-sm">
                            @Html.DisplayFor(model => model.Autor)
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="h3 col-sm">
                            Localização:
                        </div>
                        <div class="col-sm">
                            @Html.DisplayFor(model => model.Localizacao)
                        </div>
                    </div>

                </div>
                <br />
                <div class="row">
                    <div class="col-sm">
                        <div class="h3 col-sm">
                            Tipo de Edifício:
                        </div>
                        <div class="col-sm">
                            @Html.DisplayFor(model => model.TipoEdificio)
                        </div>
                    </div>

                    <div class="col-sm">
                        <div class="h3 col-sm">
                            Ano(s) de construção:
                        </div>
                        <div class="col-sm">
                            @Html.DisplayFor(model => model.Ano)
                        </div>
                    </div>

                </div>
                <br />
                <div class="row">
                    <div class="col-md">
                        <div class="h3 col-sm">
                            Coordenadas do Ícone:
                        </div>
                        <div class="col-sm" style="font-style:italic">
                            @Html.DisplayFor(model => model.CoordenadaIcon.Latitude)
                            ,
                            @Html.DisplayFor(model => model.CoordenadaIcon.Longitude)
                        </div>
                    </div>
                    @if (Model.CriadorPonto != null)
                    {
                        <div class="col-md">
                            <div class="h3 col-sm">
                                Criador do Ponto:
                            </div>
                            <div class="col-sm" style="font-style:italic">
                                @Html.DisplayFor(model => model.CriadorPonto.UserName)
                            </div>
                        </div>
                    }
                </div>
                <br />
                @if (Model.AprovadoPor != null)
                {
                    <div class="row">
                        <div class="col-md">
                            <div class="h3 col-sm">
                                Ponto aprovado por:
                            </div>
                            <div class="col-sm" style="font-style:italic">
                                @Html.DisplayFor(model => model.AprovadoPor.UserName)
                            </div>
                        </div>
                    </div>
                }
                <br /><br />

            </div>
            <div class="col-sm-3" style="background-color:#fff;padding:20px;margin:0 0 10px 10px">
                <div class="h3 col-sm">
                    Coordenadas do Polígono:
                </div>

                @foreach (var item in Model.CoordenadasPoligono)
                {<div class="col-sm" style="font-style:italic">
                        @item.Latitude
                        @String.Format(" , ")
                        @item.Longitude
                    </div>
                }

            </div>
            <div class="row" style="text-align: justify;background-color:#fff; padding:20px;margin:0">
                @Html.DisplayFor(model => model.Descricao)
            </div>
            <br />
            <br />




            <div class="row">
                @foreach (var item in Model.Imagens)
                {
                    <div class="col-sm" style="text-align: center;">
                        <div>
                            <img class="img-thumbnail" src="@Html.DisplayFor(modelItem => item.ConteudoImagem)" alt="Autor: @Html.DisplayFor(modelItem => item.Autor) " style=" margin:10px;margin-left:0px;cursor:pointer" onclick="javascript:window.location='@Url.Action("Details", "Imagens", new { id = item.Id })'" />
                        </div>
                        <div>
                            @Html.DisplayFor(modelItem => item.Nome)
                        </div>
                    </div>
                }
            </div>

        </div>
    </div>
</div>
<br />
<br />
@{
    if (User.IsInRole("administrador") || User.IsInRole("utilizador"))
    {
        if (Model.Visivel.Equals(false))
        {
            <div class="row">
                <div class="col-sm-1">
                    <a class="btn btn-success" href="@Url.Action("Aprovar", new { id = Model.Id })">Aprovar</a>
                </div>
                <div class="col-sm-1">
                    <a class="btn btn-danger" href="@Url.Action("Rejeitar", new { id = Model.Id })">Rejeitar</a>
                </div>
            </div>
        }
    }
}
<br />
<p>
    @if (User.IsInRole("administrador"))
    {
        @Html.ActionLink("Editar", "Edit", new { id = Model.Id })

    }


    |
    @Html.ActionLink("Voltar", "Index")

</p>


@section scripts
{
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBaNOF8NDOvIgeHEO5Glt6yz9AellnNS2E&callback=initMap" async defer></script>

    <script>
var map;

function initMap() {
var myCenter = new google.maps.LatLng(parseFloat("@Model.CoordenadaIcon.Latitude"), parseFloat("@Model.CoordenadaIcon.Longitude"));
var mapProp = {
                center: myCenter,
        zoom: 17,
        scrollwheel: true,
        draggable: true,
        mapTypeId: google.maps.MapTypeId.SATELLITE,
        zoomControl: false,
        mapTypeControl: false,
        scaleControl: false,
        streetViewControl: true,
        rotateControl: false,
        fullscreenControl: false };
map = new google.maps.Map(document.getElementById('map'),
        mapProp
    );

    var marker = new google.maps.Marker({ position: myCenter });
    marker.setMap(map);

    var coords = [];
@foreach(var coordenada in Model.CoordenadasPoligono)
{
@:coords.push({ lat: parseFloat("@coordenada.Latitude.Replace(",", ".")"), lng: parseFloat("@coordenada.Longitude.Replace(",", ".")") });
        }

var poligono = new google.maps.Polygon({
            paths: coords,
strokeColor: '#FF0000',
strokeOpacity: 0.8,
strokeWeight: 2,
fillColor: '#FF0000',
fillOpacity: 0.35
        });
        poligono.setMap(map);

    }
    </script>
}